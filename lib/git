#!/usr/bin/env bash

function m-git-delete()
{
    branch=$(_m-git-branches)
    if [ ! $branch ]; then
        return 0
    fi

    read -e -p " Esta seguro de borrar la rama $branch Y/N?: " delete

    if [[ "$delete" = "Y" ]]; then
        git branch -D $branch
    fi
}

function m-git-user()
{
    COMMANDS=("personal" "merqueo")
    ENV=$(printf "%s\n" "${COMMANDS[@]}" | fzf)

    git config --global core.editor nvim
    git config --global user.name "Jossie Esteban Rodriguez Salazar"

    if [[ "$ENV" = "personal" ]]; then
        git config user.email "jestebanrods@gmail.com"
    else
        git config user.email "jerodriguez@merqueo.com"
    fi
}

# Cambiar de rama desde seleccion o directamente
function m-git-switch()
{
    branch=$(_m-git-branches)
    if [ $branch ]; then
        git switch $branch
    fi
}

function m-git-merge()
{
    BRANCHE_USED=$(git branch --show-current)

    if [[ $1 ]]; then
        branch=$1
    else
        branch=$(_m-git-branches)
    fi

    if [[ $branch ]]; then
        i_mdot_title "Sincronizando rama: $branch"
        git checkout $branch
        git pull

        i_mdot_title "Fusionando en rama: $BRANCHE_USED"
        git checkout $BRANCHE_USED
        git merge $branch
    fi
}

function m-git-changes()
{
    if [[ "$1" = "-s" ]]; then
        hash=$(git log --oneline | fzf --header="Seleccione el commit")
    else
        hash=$(git log --oneline | head -1)
    fi
    hash=$(echo $hash | awk '{ print $1 }')
    git diff $hash --stat
}

function m-git-config()
{
    VAR_VALUE=$(git config --list \
        | grep -v "branch\." \
        | grep -v "remote\.origin\.fetch" \
        | fzf --header="Seleccione la variable a modificar"
    )
    if [[ $VAR_VALUE ]]; then
        VAR_NAME=$(echo $VAR_VALUE | awk -F "=" '{ print $1 }')
        OLD_VALUE=$(echo $VAR_VALUE | awk -F "=" '{ print $2 }')
        read -e -p "Digite el nuevo valor para $VAR_NAME: " -i "$OLD_VALUE" NEW_VALUE
    fi

    if [[ $NEW_VALUE ]]; then
        git config "$VAR_NAME" "$NEW_VALUE"
    fi
}

function parse-git-branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

# Listar las ramas excepto las remotas
# Solo muestra las activas
function _m-git-branches()
{
    BRANCHE_USED=$(git branch --show-current)
    branch=$(git branch --all  \
        | grep -v "remotes/" \
        | grep -v "$BRANCHE_USED" \
        | fzf --header="Seleccione una rama: " \
        | awk '{ print $1 }'
    )
    echo $branch
}
